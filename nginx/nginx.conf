# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

pid        /run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nodelay     on;
    keepalive_timeout  65;

    gzip  on;

    index   index.html index.htm;

    # No unencrypted comms around here!
    server {
        listen       80;
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen       443;
        server_name  localhost;
        root         html;

        ssl                  on;
        ssl_certificate      /etc/nginx/certs/server.crt;
        ssl_certificate_key  /etc/nginx/certs/server.key;

        ssl_dhparam /etc/dhparams/dhparams.pem;
        ssl_session_cache shared:SSL:1m;

        ssl_session_timeout  5m;

        # No SSLv3 to be seen around here either
        ssl_protocols  TLSv1.2;

        # As per: https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4;

        ssl_prefer_server_ciphers   on;

        # Provide a static directory to allow letsencrypt webroot based certificate updates
        location /.well-known/acme-challenge {
            default_type  "text/plain";
            root          /wwwroot/letsencrypt;
        }        

        location / {
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   Host      $http_host;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_pass         http://127.0.0.1:2368;
        }
    }

    # # Sample server for redirecting www to the bare domain
    # # HTTPS server
    # server {
    #     listen       443;
    #     server_name  www.localhost.com;
    #     root         html;

    #     ssl                  on;
    #     ssl_dhparam /etc/dhparams/dhparams.pem;
    #     ssl_session_cache shared:SSL:1m;

    #     ssl_certificate      /etc/nginx/certs/server.crt;
    #     ssl_certificate_key  /etc/nginx/certs/server.key;

    #     ssl_session_timeout  5m;

    #     # No SSLv3 to be seen around here either
    #     ssl_protocols  TLSv1.2;

    #     # Cipher list as per: http://security.stackexchange.com/questions/54639/nginx-recommended-ssl-ciphers-for-security-compatibility-with-pfs
         
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4;
    #     ssl_prefer_server_ciphers   on;

    #     return 301 https://localhost.com$request_uri;
    # }

}